{"version":3,"sources":["components/ParticipantContainer/ParticipantContainer.module.scss","components/TimerContainer/TimerContainer.module.scss","components/Timer/Timer.module.scss","components/PlayButton/PlayButton.module.scss","components/ParticipantForm/ParticipantForm.module.scss","components/TimerInput/TimerInput.module.scss","components/Timer/Timer.js","components/PlayButton/PlayButton.js","components/TimerContainer/TimerContainer.js","components/TimerInput/TimerInput.js","components/ParticipantForm/ParticipantForm.js","components/ParticipantContainer/ParticipantContainer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","time","label","className","styles","container","timer","top","content","timeText","minutes","Math","floor","renderMinutes","seconds","renderSeconds","renderTime","bottom","PlayButton","activeParticipant","onClick","isActive","buttonClasses","playPauseButton","join","Fragment","TimerContainer","startTime","currentTime","handleNextActiveParticipant","handleSetCurrentTime","TIME_UNITS","useState","setIsActive","resetTimer","useEffect","interval","setInterval","clearInterval","title","name","buttonContainer","stop","TimerInput","handleSetStartTime","input","type","placeholder","step","min","max","autoFocus","onChange","event","inputTime","Number","target","value","defaultValue","ParticipantForm","addInputValue","handleAddParticipant","handleSetaddInputValue","addInputContainer","onSubmit","e","addInput","ParticipantContainer","participants","handleUpdateParticipants","handleSpecificActiveParticipant","draggedParticipant","setDraggedParticipant","setaddInputValue","handleDragEnd","index","isDragging","renderParticipants","map","participant","classes","inputHolder","draggable","onDragStart","draggedItem","handleDragStart","onDragEnd","onDragOver","other","filter","p","splice","handleDragOver","key","uuid","delete","length","newParticipants","deleteParticipant","preventDefault","newParticipant","Date","now","push","inputContainer","shuffleButton","i","j","random","App","setParticipants","setActiveParticipant","setStarTime","setCurrentTime","updateNextActiveParticipant","newActiveParticipant","currentActiveIndex","findIndex","style","display","height","newActive","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ac4a92c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ParticipantContainer_container__1Uj4x\",\"inputContainer\":\"ParticipantContainer_inputContainer___t9Ah\",\"input\":\"ParticipantContainer_input__1EXYY\",\"inputHolder\":\"ParticipantContainer_inputHolder__2rPku\",\"inputHolder--dragging\":\"ParticipantContainer_inputHolder--dragging__33DtJ\",\"inputHolder--active\":\"ParticipantContainer_inputHolder--active__25ptU\",\"shuffleButton\":\"ParticipantContainer_shuffleButton__gLf8s\",\"delete\":\"ParticipantContainer_delete__ogjgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TimerContainer_container__1RFTZ\",\"title\":\"TimerContainer_title__2uVOZ\",\"timer\":\"TimerContainer_timer__8bVsT\",\"timerDivider\":\"TimerContainer_timerDivider__lfwPa\",\"buttonContainer\":\"TimerContainer_buttonContainer__axSt7\",\"stop\":\"TimerContainer_stop__3-Q6r\",\"stop--active\":\"TimerContainer_stop--active__1ZN7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timer_container__2Z93T\",\"timer\":\"Timer_timer__18nxm\",\"top\":\"Timer_top__29Skv\",\"bottom\":\"Timer_bottom__1P5-m\",\"content\":\"Timer_content__1Xqcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playPauseButton\":\"PlayButton_playPauseButton__26eVj\",\"playPauseButton--active\":\"PlayButton_playPauseButton--active__1IxNq\",\"playPauseButton--enabled\":\"PlayButton_playPauseButton--enabled__3jIqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addInputContainer\":\"ParticipantForm_addInputContainer__1UgFt\",\"addInput\":\"ParticipantForm_addInput__120XR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TimerInput_input__3X8hm\"};","import React from \"react\";\r\nimport styles from \"./Timer.module.scss\";\r\n\r\nconst Timer = ({time, label}) => {\r\n  \r\n  function renderMinutes() {\r\n    let minutes = Math.floor(time / 60);\r\n    return minutes < 10 ? `0${minutes}` : minutes;\r\n  }\r\n\r\n  function renderSeconds() {\r\n    let seconds = time % 60;\r\n    return seconds < 10 ? `0${seconds}` : seconds;\r\n  }\r\n\r\n  const renderTime = () => {\r\n    let timeText;\r\n    switch (label) {\r\n      case 'MINUTES':\r\n        timeText = renderMinutes();\r\n        break;\r\n      \r\n      case 'SECONDS':\r\n        timeText = renderSeconds();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return timeText;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.timer}>\r\n        <div className={styles.top}></div>\r\n        <span className={styles.content}>{renderTime()}</span>\r\n        <div className={styles.bottom}></div>\r\n      </div>\r\n      <span className={styles.label}>{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport styles from \"./PlayButton.module.scss\";\r\n\r\nconst PlayButton = ({activeParticipant, onClick, isActive}) => {\r\n\r\n  const buttonClasses = [\r\n    styles.playPauseButton,\r\n    isActive ? styles[\"playPauseButton--active\"] : \"\",\r\n    activeParticipant ? styles[\"playPauseButton--enabled\"] : \"\"\r\n  ].join(\" \");\r\n  return (\r\n    <React.Fragment>\r\n       <button onClick={onClick} className={buttonClasses}></button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TimerContainer.module.scss\";\r\n\r\nimport Timer from \"../Timer/Timer\";\r\nimport PlayButton from \"../PlayButton/PlayButton\";\r\n\r\nconst TimerContainer = ({\r\n  activeParticipant,\r\n  startTime,\r\n  currentTime,\r\n  handleNextActiveParticipant,\r\n  handleSetCurrentTime\r\n}) => {\r\n  const TIME_UNITS = {\r\n    MINUTES: \"MINUTES\",\r\n    SECONDS: \"SECONDS\"\r\n  };\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (isActive && currentTime > 0) {\r\n      interval = setInterval(() => {\r\n        handleSetCurrentTime(time => time - 1);\r\n      }, 1000);\r\n    } else if (isActive && currentTime <= 0) {\r\n      clearInterval(interval);\r\n      resetTimer();\r\n\r\n      handleNextActiveParticipant();\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, currentTime]);\r\n\r\n  function toggleTimer() {\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n  function resetTimer() {\r\n    handleSetCurrentTime(startTime);\r\n    setIsActive(false);\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h3 className={styles.title}>{!activeParticipant ? 'Add a participant!' : `${activeParticipant.name}s turn`}</h3>\r\n\r\n      <div className={styles.timer}>\r\n        <Timer time={currentTime} label={TIME_UNITS.MINUTES} />\r\n        <Timer time={currentTime} label={TIME_UNITS.SECONDS} />\r\n      </div>\r\n\r\n      <div className={styles.buttonContainer}>\r\n        <PlayButton activeParticipant={activeParticipant} isActive={isActive} onClick={toggleTimer}></PlayButton>\r\n        {\r\n          <p\r\n            onClick={resetTimer}\r\n            className={[\r\n              styles.stop,\r\n              isActive || currentTime < startTime ? styles[\"stop--active\"] : \"\"\r\n            ].join(\" \")}\r\n          >\r\n            Reset\r\n          </p>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TimerContainer;\r\n","import React from \"react\";\r\nimport styles from \"./TimerInput.module.scss\";\r\n\r\nconst TimerInput = ({ startTime, handleSetStartTime, handleSetCurrentTime }) => {\r\n  function updateTimer(event) {\r\n    let inputTime = Number(event.target.value);\r\n    if (inputTime > 99) event.target.value = inputTime = 99;\r\n    else if (inputTime < 0) event.target.value = inputTime = 0;\r\n\r\n    handleSetStartTime(inputTime * 60);\r\n    handleSetCurrentTime(inputTime * 60);\r\n  }\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type=\"number\"\r\n      placeholder=\"\"\r\n      step=\"1\"\r\n      min=\"0\"\r\n      max=\"99\"\r\n      autoFocus={true}\r\n      onChange={updateTimer}\r\n      defaultValue={startTime / 60}\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default TimerInput;\r\n","import React from \"react\";\r\nimport styles from \"./ParticipantForm.module.scss\";\r\n\r\nconst ParticipantForm = ({ addInputValue, handleAddParticipant, handleSetaddInputValue }) => {\r\n  return (\r\n    <form\r\n      className={styles.addInputContainer}\r\n      onSubmit={e => handleAddParticipant(e)}\r\n    >\r\n      <input\r\n        className={styles.addInput}\r\n        type=\"text\"\r\n        placeholder={\"Add a friend\"}\r\n        value={addInputValue}\r\n        onChange={e => handleSetaddInputValue(e.target.value)}\r\n      ></input>\r\n      <button type=\"submit\" value=\"Submit\">\r\n        ADD\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ParticipantForm;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ParticipantContainer.module.scss\";\r\nimport TimerInput from \"../TimerInput/TimerInput\";\r\nimport ParticipantForm from \"../ParticipantForm/ParticipantForm\";\r\n\r\nconst ParticipantContainer = ({\r\n  activeParticipant,\r\n  participants,\r\n  startTime,\r\n  handleUpdateParticipants,\r\n  handleNextActiveParticipant,\r\n  handleSpecificActiveParticipant,\r\n  handleSetStartTime,\r\n  handleSetCurrentTime\r\n}) => {\r\n  const [draggedParticipant, setDraggedParticipant] = useState();\r\n  const [addInputValue, setaddInputValue] = useState(\"\");\r\n\r\n  const handleDragStart = (event, index) => {\r\n    const draggedItem = participants[index];\r\n    draggedItem.isDragging = true;\r\n    setDraggedParticipant(draggedItem);\r\n\r\n    // event.dataTransfer.effectAllowed = \"move\";\r\n    // event.dataTransfer.setData(\"text/html\", event.target.parentNode); // firefox fix\r\n    // event.dataTransfer.setDragImage(event.target.parentNode, 20, 20); // chrome fix\r\n  };\r\n\r\n  const handleDragOver = (event, index) => {\r\n    const draggedItem = participants[index];\r\n    if (draggedItem === draggedParticipant) return;\r\n\r\n    let other = participants.filter(p => p !== draggedParticipant);\r\n    other.splice(index, 0, draggedParticipant);\r\n    handleUpdateParticipants(other);\r\n  };\r\n\r\n  const handleDragEnd = (event, index) => {\r\n    draggedParticipant.isDragging = false;\r\n    setDraggedParticipant();\r\n  };\r\n\r\n  const addParticipant = event => {\r\n    event.preventDefault();\r\n    if (!addInputValue) return;\r\n\r\n    const newParticipant = {\r\n      name: addInputValue,\r\n      isDragging: false,\r\n      uuid: Date.now()\r\n    };\r\n\r\n    participants.push(newParticipant);\r\n    setaddInputValue(\"\");\r\n    handleUpdateParticipants(participants);\r\n\r\n    if (!activeParticipant) {\r\n      handleSpecificActiveParticipant(newParticipant);\r\n    }\r\n  };\r\n\r\n  const shuffleParticipants = () => {\r\n    for (let i = participants.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [participants[i], participants[j]] = [participants[j], participants[i]];\r\n    }\r\n    handleUpdateParticipants(participants);\r\n    handleSpecificActiveParticipant(participants[0]);\r\n  };\r\n\r\n  const deleteParticipant = uuid => {\r\n    if (participants.length === 1) handleSpecificActiveParticipant();\r\n    else if (activeParticipant.uuid === uuid) handleNextActiveParticipant();\r\n\r\n    const newParticipants = participants.filter(p => p.uuid !== uuid);\r\n    handleUpdateParticipants(newParticipants);\r\n  };\r\n\r\n  const renderParticipants = participants.map((participant, index) => {\r\n    const classes = [\r\n      styles.inputHolder,\r\n      participant.isDragging ? styles[\"inputHolder--dragging\"] : \"\",\r\n      participant === activeParticipant ? styles[\"inputHolder--active\"] : \"\"\r\n    ].join(\" \");\r\n\r\n    return (\r\n      <div\r\n        draggable\r\n        onDragStart={e => handleDragStart(e, index)}\r\n        onDragEnd={handleDragEnd}\r\n        onDragOver={e => handleDragOver(e, index)}\r\n        key={participant.uuid}\r\n        className={classes}\r\n      >\r\n        {/* <span className={styles.green}>&#10004;</span> */}\r\n        <div className={styles.input}>{participant.name}</div>\r\n        <span\r\n          className={styles.delete}\r\n          onClick={() => deleteParticipant(participant.uuid)}\r\n        >\r\n          &#10006;\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <TimerInput\r\n        startTime={startTime}\r\n        handleSetStartTime={handleSetStartTime}\r\n        handleSetCurrentTime={handleSetCurrentTime}\r\n      ></TimerInput>\r\n\r\n      <ParticipantForm\r\n        addInputValue={addInputValue}\r\n        handleSetaddInputValue={setaddInputValue}\r\n        handleAddParticipant={addParticipant}\r\n      ></ParticipantForm>\r\n\r\n      <div className={styles.inputContainer}>\r\n        {renderParticipants}\r\n        {participants.length > 1 && (\r\n          <button\r\n            className={styles.shuffleButton}\r\n            onClick={shuffleParticipants}\r\n          >\r\n            SHUFFLE\r\n          </button>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ParticipantContainer;\r\n","import React, { useState } from \"react\";\r\nimport \"../../scss/global.scss\";\r\nimport TimerContainer from \"../TimerContainer/TimerContainer\";\r\nimport ParticipantContainer from \"../ParticipantContainer/ParticipantContainer\";\r\n\r\nconst App = () => {\r\n  const initialTime = 3; // 15 minutes\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n  const [activeParticipant, setActiveParticipant] = useState();\r\n  const [startTime, setStarTime] = useState(initialTime);\r\n  const [currentTime, setCurrentTime] = useState(initialTime);\r\n\r\n  const updateNextActiveParticipant = () => {\r\n    const currentActiveIndex = participants.findIndex(\r\n      p => p.uuid === activeParticipant.uuid\r\n    );\r\n    let newActiveParticipant;\r\n    if (currentActiveIndex === participants.length - 1) {\r\n      newActiveParticipant = participants[0];\r\n    } else {\r\n      newActiveParticipant = participants[currentActiveIndex + 1];\r\n    }\r\n    setActiveParticipant(newActiveParticipant);\r\n  };\r\n\r\n  const updateParticipants = newParticipants => {\r\n    setParticipants([...newParticipants]);\r\n  };\r\n\r\n  const updateSpecificActiveParticipant = newActive => {\r\n    setActiveParticipant(newActive);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section style={{ display: \"flex\", height: \"100%\" }}>\r\n        <TimerContainer\r\n          activeParticipant={activeParticipant}\r\n          startTime={startTime}\r\n          currentTime={currentTime}\r\n          handleNextActiveParticipant={updateNextActiveParticipant}\r\n          handleSetCurrentTime={setCurrentTime}\r\n        />\r\n        <ParticipantContainer\r\n          activeParticipant={activeParticipant}\r\n          participants={participants}\r\n          startTime={startTime}\r\n          handleUpdateParticipants={updateParticipants}\r\n          handleNextActiveParticipant={updateNextActiveParticipant}\r\n          handleSpecificActiveParticipant={updateSpecificActiveParticipant}\r\n          handleSetStartTime={setStarTime}\r\n          handleSetCurrentTime={setCurrentTime}\r\n        />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}