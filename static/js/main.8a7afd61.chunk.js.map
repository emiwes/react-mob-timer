{"version":3,"sources":["components/ParticipantContainer/ParticipantContainer.module.scss","components/TimerContainer/TimerContainer.module.scss","components/Timer/Timer.module.scss","components/PlayButton/PlayButton.module.scss","components/ParticipantForm/ParticipantForm.module.scss","components/TimerInput/TimerInput.module.scss","assets/audio/fight.mp3","assets/audio/timeover.mp3","store/time/timeActions.ts","components/Timer/Timer.tsx","store/participants/participantsActions.ts","hooks/useTime.ts","components/PlayButton/PlayButton.tsx","hooks/useParticipant.ts","components/TimerContainer/TimerContainer.tsx","components/TimerInput/TimerInput.tsx","components/ParticipantForm/ParticipantForm.tsx","components/ParticipantContainer/ParticipantContainer.tsx","store/createReducer.ts","store/participants/participantsReducer.ts","store/time/timeReducer.ts","store/rootReducer.ts","components/App/App.tsx","store/configureStore.ts","serviceWorker.js","index.tsx"],"names":["module","exports","TimeActionTypes","Timer","time","label","className","styles","container","timer","top","content","timeText","minutes","Math","floor","renderMinutes","seconds","renderSeconds","renderTime","bottom","ParticipantsActionTypes","getTime","createSelector","state","timeState","useTime","dispatch","useDispatch","timeSelector","useSelector","decrementAction","useCallback","type","DECREMENT","resetAction","RESET","setStartAction","SET_START","payload","setStart","setIsActiveAction","isActive","SET_ACTIVE","setActive","decrementTime","resetTime","setStartTime","setIsActive","fightSound","require","PlayButton","activeParticipant","buttonClasses","playPauseButton","join","onClick","currentTime","startTime","Audio","play","disabled","getParticipants","participants","participantState","useParticipant","participantSelector","addAction","newParticipant","ADD","add","removeAction","uuid","REMOVE","remove","updateAction","participant","UPDATE","update","newParticipants","reset","addParticipantAction","removeParticipantAction","resetParticipantAction","updateParticipantAction","timeoverSound","TimerContainer","find","p","TIME_UNITS","setNextActiveParticipant","currentActiveIndex","findIndex","current","next","length","useEffect","interval","timeInSeconds","totalMinutes","leftOverSeconds","document","title","writeToTitle","window","setInterval","clearInterval","name","buttonContainer","stop","TimerInput","input","placeholder","step","min","max","autoFocus","onChange","event","inputTime","parseFloat","target","value","toString","defaultValue","ParticipantForm","useState","addInputValue","setaddInputValue","addInputContainer","onSubmit","e","preventDefault","isDragging","Date","now","addParticipant","addInput","ParticipantContainer","renderParticipants","map","index","classes","inputHolder","draggable","onDragStart","draggedParticipant","draggedItem","handleDragStart","onDragEnd","handleDragEnd","onDragOver","other","filter","splice","handleDragOver","key","delete","deleteParticipant","inputContainer","shuffleButton","shuffled","i","j","random","createReducer","initialState","handlers","action","produce","draft","participantReducer","push","timeReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","configureStore","App","style","display","height","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a7afd61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ParticipantContainer_container__2L0l9\",\"inputContainer\":\"ParticipantContainer_inputContainer__35k3Y\",\"input\":\"ParticipantContainer_input__2nxjj\",\"inputHolder\":\"ParticipantContainer_inputHolder__A2fP_\",\"inputHolder--dragging\":\"ParticipantContainer_inputHolder--dragging__ApaXe\",\"inputHolder--active\":\"ParticipantContainer_inputHolder--active__pGr0D\",\"shuffleButton\":\"ParticipantContainer_shuffleButton__2FifX\",\"delete\":\"ParticipantContainer_delete__3Q-ir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TimerContainer_container__1SuAO\",\"title\":\"TimerContainer_title__tt8x-\",\"timer\":\"TimerContainer_timer__1O_lA\",\"timerDivider\":\"TimerContainer_timerDivider__1uqI_\",\"buttonContainer\":\"TimerContainer_buttonContainer__dxCq6\",\"stop\":\"TimerContainer_stop__UtwD4\",\"stop--active\":\"TimerContainer_stop--active__1q3Ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timer_container__1lHjA\",\"timer\":\"Timer_timer__7fVPQ\",\"top\":\"Timer_top__2P4OL\",\"bottom\":\"Timer_bottom__Q1X4X\",\"content\":\"Timer_content__2ZwwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playPauseButton\":\"PlayButton_playPauseButton__31J6X\",\"playPauseButton--active\":\"PlayButton_playPauseButton--active__1_LeN\",\"playPauseButton--enabled\":\"PlayButton_playPauseButton--enabled__1S9Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addInputContainer\":\"ParticipantForm_addInputContainer__M5_1Z\",\"addInput\":\"ParticipantForm_addInput__3STb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TimerInput_input__20f4b\"};","module.exports = __webpack_public_path__ + \"static/media/fight.4e9f7ab1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/timeover.c39f339c.mp3\";","\r\nenum TimeActionTypes {\r\n    DECREMENT = \"time/decrement\",\r\n    RESET = \"time/reset\",\r\n    SET_START = \"time/setStart\",\r\n    SET_ACTIVE = \"time/setActive\",\r\n}\r\n\r\nexport const decrement = () => ({\r\n    type: TimeActionTypes.DECREMENT,\r\n});\r\n\r\nexport const reset = () => ({\r\n    type: TimeActionTypes.RESET,\r\n});\r\n\r\nexport const setStart = (time: number) => ({\r\n    type: TimeActionTypes.SET_START,\r\n    payload: time\r\n});\r\n\r\nexport const setActive = (isActive: boolean) => ({\r\n    type: TimeActionTypes.SET_ACTIVE,\r\n    payload: isActive\r\n});\r\n\r\nexport default TimeActionTypes;\r\n","import React from \"react\";\r\nimport styles from \"./Timer.module.scss\";\r\n\r\ninterface ITimerProps {\r\n  time: number,\r\n  label: string\r\n}\r\n\r\nconst Timer: React.FC<ITimerProps> = ({time, label}) => {\r\n  \r\n  function renderMinutes(): string {\r\n    let minutes = Math.floor(time / 60);\r\n    return minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n  }\r\n\r\n  function renderSeconds(): string {\r\n    let seconds = time % 60;\r\n    return seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n  }\r\n\r\n  const renderTime = (): string => {\r\n    let timeText;\r\n    switch (label) {\r\n      case 'MINUTES':\r\n        timeText = renderMinutes();\r\n        break;\r\n      \r\n      case 'SECONDS':\r\n        timeText = renderSeconds();\r\n        break;\r\n      default:\r\n        timeText = '';\r\n        break;\r\n    }\r\n\r\n    return timeText;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.timer}>\r\n        <div className={styles.top}></div>\r\n        <span className={styles.content}>{renderTime()}</span>\r\n        <div className={styles.bottom}></div>\r\n      </div>\r\n      <span className={styles.label}>{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { IParticipant } from \"../../models/models\";\r\n\r\nenum ParticipantsActionTypes {\r\n    ADD = \"participants/add\",\r\n    REMOVE = \"participants/remove\",\r\n    UPDATE = \"participants/update\",\r\n    RESET = \"participants/reset\",\r\n}\r\n\r\nexport const add = (newParticipant: IParticipant) => ({\r\n    type: ParticipantsActionTypes.ADD,\r\n    payload: newParticipant\r\n});\r\n\r\nexport const remove = (uuid: number) => ({\r\n    type: ParticipantsActionTypes.REMOVE,\r\n    payload: uuid\r\n});\r\n\r\nexport const update = (participant: IParticipant) => ({\r\n    type: ParticipantsActionTypes.UPDATE,\r\n    payload: participant\r\n});\r\n\r\nexport const reset = (newParticipants: IParticipant[]) => ({\r\n    type: ParticipantsActionTypes.RESET,\r\n    payload: newParticipants\r\n});\r\n\r\nexport default ParticipantsActionTypes;\r\n","import { AppState } from \"../store/rootReducer\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport { decrement, reset, setStart, setActive } from \"../store/time/timeActions\";\r\n\r\n\r\nconst getTime = createSelector(\r\n    (state: AppState) => state.time,\r\n    (timeState) => ({timeState})\r\n)\r\n\r\nconst useTime = () => {\r\n    const dispatch = useDispatch();\r\n    const timeSelector = useSelector(getTime);\r\n\r\n    const decrementAction = useCallback( () => dispatch( decrement() ), [dispatch]);\r\n    const resetAction = useCallback( () => dispatch( reset() ), [dispatch]);\r\n    const setStartAction = useCallback( (time: number) => dispatch(setStart(time) ), [dispatch]);\r\n    const setIsActiveAction = useCallback( (isActive: boolean) => dispatch(setActive(isActive) ), [dispatch]);\r\n        \r\n    return {        \r\n        time: timeSelector.timeState,\r\n        decrementTime: decrementAction,\r\n        resetTime: resetAction,\r\n        setStartTime: setStartAction,\r\n        setIsActive: setIsActiveAction,\r\n    }\r\n}\r\n\r\nexport default useTime;\r\n","import React from \"react\";\r\nimport styles from \"./PlayButton.module.scss\";\r\nimport { IParticipant } from \"../../models/models\";\r\nimport useTime from \"../../hooks/useTime\";\r\n\r\nconst fightSound = require(\"../../assets/audio/fight.mp3\");\r\n\r\ninterface IPlayButtonProps {\r\n  activeParticipant?: IParticipant,\r\n}\r\n\r\nconst PlayButton: React.FC<IPlayButtonProps> = ({ activeParticipant }) => {\r\n\r\n  const { time, setIsActive } = useTime();\r\n\r\n  function toggleTimer(): void {\r\n    if (!time.isActive && time.currentTime === time.startTime) {\r\n      var audio = new Audio(fightSound);\r\n      audio.play();\r\n    }\r\n\r\n    setIsActive(!time.isActive);\r\n  }\r\n\r\n  const buttonClasses = [\r\n    styles.playPauseButton,\r\n    time.isActive ? styles[\"playPauseButton--active\"] : \"\",\r\n    activeParticipant ? styles[\"playPauseButton--enabled\"] : \"\"\r\n  ].join(\" \");\r\n  return (\r\n    <button onClick={toggleTimer} className={buttonClasses} disabled={!activeParticipant}></button>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import { AppState } from \"../store/rootReducer\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport { add, remove, update, reset } from \"../store/participants/participantsActions\";\r\nimport { IParticipant } from \"../models/models\";\r\n\r\n\r\nconst getParticipants = createSelector( \r\n    (state: AppState) => state.participants,\r\n    (participantState) => ({participantState}),\r\n);\r\n\r\nconst useParticipant = () => {\r\n    const dispatch = useDispatch();\r\n    const participantSelector = useSelector(getParticipants);\r\n    \r\n    const addAction = useCallback( (newParticipant: IParticipant) => dispatch(add(newParticipant)), [dispatch] ); \r\n    const removeAction = useCallback( (uuid: number) => dispatch(remove(uuid)), [dispatch] ); \r\n    const updateAction = useCallback( (participant: IParticipant) => dispatch(update(participant)), [dispatch] ); \r\n    const resetAction = useCallback( (newParticipants: IParticipant[]) => dispatch(reset(newParticipants)), [dispatch] ); \r\n    \r\n    return {\r\n        participants: participantSelector.participantState.participants,\r\n        addParticipantAction: addAction,\r\n        removeParticipantAction: removeAction,\r\n        resetParticipantAction: resetAction,\r\n        updateParticipantAction: updateAction,\r\n    }\r\n}\r\n\r\nexport default useParticipant;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport styles from \"./TimerContainer.module.scss\";\r\n\r\nimport Timer from \"../Timer/Timer\";\r\nimport PlayButton from \"../PlayButton/PlayButton\";\r\nimport useParticipant from \"../../hooks/useParticipant\";\r\nimport useTime from \"../../hooks/useTime\";\r\n\r\nconst timeoverSound = require(\"../../assets/audio/timeover.mp3\");\r\n\r\ninterface ITimerContainer { }\r\n\r\nconst TimerContainer: React.FC<ITimerContainer> = () => {\r\n\r\n  const { participants, updateParticipantAction } = useParticipant();\r\n  const activeParticipant = participants.find(p => p.isActive);\r\n  const { time, resetTime, decrementTime } = useTime();\r\n\r\n  const TIME_UNITS = {\r\n    MINUTES: \"MINUTES\",\r\n    SECONDS: \"SECONDS\"\r\n  };\r\n\r\n  const setNextActiveParticipant = useCallback( () => {\r\n    if (!activeParticipant) return;\r\n\r\n    const currentActiveIndex = participants.findIndex(p => p.isActive);\r\n    const current = { ...activeParticipant }\r\n    current.isActive = false;\r\n\r\n    const next = currentActiveIndex === participants.length - 1 ? { ...participants[0] } : { ...participants[currentActiveIndex + 1] }\r\n    next.isActive = true;\r\n    updateParticipantAction(current);\r\n    updateParticipantAction(next);\r\n  }, [activeParticipant, participants, updateParticipantAction]);\r\n\r\n  useEffect(() => {\r\n    let interval: any;\r\n\r\n    if (time.isActive && time.currentTime >= 0) {\r\n      writeToTitle(time.currentTime);\r\n\r\n      interval = window.setInterval(() => {\r\n        decrementTime();\r\n      }, 1000);\r\n    } else if (time.isActive && time.currentTime < 0) {\r\n      playStopSound();\r\n      window.clearInterval(interval);\r\n      resetTime();\r\n      setNextActiveParticipant();\r\n    }\r\n\r\n    return () => window.clearInterval(interval);\r\n  }, [\r\n    time.isActive,\r\n    time.currentTime,\r\n    decrementTime,\r\n    resetTime,\r\n    setNextActiveParticipant\r\n  ]);\r\n\r\n  function writeToTitle(timeInSeconds: number): void {\r\n    const totalMinutes = Math.floor(timeInSeconds / 60);\r\n    const leftOverSeconds = timeInSeconds % 60;\r\n    document.title = `${totalMinutes}min ${leftOverSeconds}s`;\r\n  }\r\n\r\n  function playStopSound() {\r\n    var audio = new Audio(timeoverSound);\r\n    audio.play();\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h3 className={styles.title}>\r\n        {!activeParticipant\r\n          ? \"Add a participant!\"\r\n          : `${activeParticipant.name}s turn`}\r\n      </h3>\r\n\r\n      <div className={styles.timer}>\r\n        <Timer time={time.currentTime} label={TIME_UNITS.MINUTES} />\r\n        <Timer time={time.currentTime} label={TIME_UNITS.SECONDS} />\r\n      </div>\r\n\r\n      <div className={styles.buttonContainer}>\r\n        <PlayButton activeParticipant={activeParticipant} />\r\n        {\r\n          <p\r\n            onClick={resetTime}\r\n            className={[\r\n              styles.stop,\r\n              time.isActive || time.currentTime < time.startTime ? styles[\"stop--active\"] : \"\"\r\n            ].join(\" \")}\r\n          >\r\n            Reset\r\n          </p>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TimerContainer;\r\n","import React from \"react\";\r\nimport styles from \"./TimerInput.module.scss\";\r\nimport useTime from \"../../hooks/useTime\";\r\n\r\ninterface ITimerInput{}\r\n\r\nconst TimerInput: React.FC<ITimerInput> = () => {\r\n\r\n  const { time, setStartTime } = useTime();\r\n\r\n  function updateTimer(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    let inputTime = parseFloat(event.target.value);\r\n\r\n    if(!inputTime) return;\r\n\r\n    if (inputTime > 99){\r\n      inputTime = 99;\r\n      event.target.value = inputTime.toString(); \r\n    } \r\n    else if (inputTime < 0){\r\n      inputTime = 0;\r\n      event.target.value = inputTime.toString();\r\n    } \r\n    setStartTime(inputTime * 60);\r\n  }\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type=\"number\"\r\n      placeholder=\"\"\r\n      step=\"1\"\r\n      min=\"0\"\r\n      max=\"99\"\r\n      autoFocus={true}\r\n      onChange={updateTimer}\r\n      defaultValue={time.startTime / 60}\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default TimerInput;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ParticipantForm.module.scss\";\r\nimport useParticipant from \"../../hooks/useParticipant\";\r\nimport { IParticipant } from \"../../models/models\";\r\n\r\nconst ParticipantForm: React.FC = () => {\r\n\r\n  const [addInputValue, setaddInputValue] = useState(\"\");\r\n  const { participants, addParticipantAction } = useParticipant();\r\n\r\n  const addParticipant = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (!addInputValue) return;\r\n\r\n    const newParticipant: IParticipant = {\r\n      name: addInputValue,\r\n      isDragging: false,\r\n      uuid: Date.now(),\r\n      isActive: (participants && participants.length < 1)\r\n    };\r\n\r\n    addParticipantAction(newParticipant);\r\n    setaddInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.addInputContainer}\r\n      onSubmit={e => addParticipant(e)}\r\n    >\r\n      <input\r\n        className={styles.addInput}\r\n        type=\"text\"\r\n        placeholder={\"Add a friend\"}\r\n        value={addInputValue}\r\n        onChange={e => setaddInputValue(e.target.value)}\r\n      ></input>\r\n      <button type=\"submit\" value=\"Submit\">\r\n        ADD\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ParticipantForm;\r\n","import React from \"react\";\r\nimport styles from \"./ParticipantContainer.module.scss\";\r\nimport TimerInput from \"../TimerInput/TimerInput\";\r\nimport ParticipantForm from \"../ParticipantForm/ParticipantForm\";\r\nimport { IParticipant } from \"../../models/models\";\r\nimport useParticipant from \"../../hooks/useParticipant\";\r\n\r\ninterface IParticipantContainer{}\r\n\r\nconst ParticipantContainer: React.FC<IParticipantContainer> = () => {\r\n\r\n  const { participants, removeParticipantAction, resetParticipantAction, updateParticipantAction } = useParticipant();\r\n\r\n  const handleDragStart = (draggedParticipant: IParticipant) => {\r\n    const draggedItem = {...draggedParticipant};    \r\n    draggedItem.isDragging = true;\r\n    updateParticipantAction(draggedItem);\r\n  };\r\n\r\n  const handleDragOver = (index: number) => {\r\n    const draggedItem = participants.find(p => p.isDragging);\r\n    if (!draggedItem || participants[index] === draggedItem) return;\r\n    let other: IParticipant[] = participants.filter(p => p !== draggedItem);\r\n    other.splice(index, 0, draggedItem);\r\n    resetParticipantAction(other);\r\n  };\r\n\r\n  const handleDragEnd = (draggedParticipant: IParticipant) => {\r\n    const draggedItem = {...draggedParticipant}\r\n    draggedItem.isDragging = false;\r\n    updateParticipantAction(draggedItem);\r\n  };\r\n\r\n  const shuffleParticipants = () => {\r\n    let shuffled = [...participants]\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    resetParticipantAction(shuffled);\r\n  };\r\n\r\n  const deleteParticipant = (participant: IParticipant, index: number) => {\r\n    const participantToRemove = {...participant};\r\n    if (participantToRemove.isActive) {\r\n      const currentActiveIndex = participants.findIndex(p => p.isActive);\r\n      const next = currentActiveIndex === participants.length - 1 ? { ...participants[0] } : { ...participants[currentActiveIndex + 1] }\r\n      next.isActive = true;\r\n      updateParticipantAction(next);\r\n    } \r\n    removeParticipantAction(participant.uuid);\r\n  };\r\n\r\n  const renderParticipants = participants.map((participant: IParticipant, index: number) => {\r\n    const classes = [\r\n      styles.inputHolder,\r\n      participant.isDragging ? styles[\"inputHolder--dragging\"] : \"\",\r\n      participant.isActive ? styles[\"inputHolder--active\"] : \"\"\r\n    ].join(\" \");\r\n\r\n    return (\r\n      <div\r\n        draggable\r\n        onDragStart={() => handleDragStart(participant)}\r\n        onDragEnd={() => handleDragEnd(participant)}\r\n        onDragOver={() => handleDragOver(index)}\r\n        key={participant.uuid}\r\n        className={classes}\r\n      >\r\n        {/* <span className={styles.green}>&#10004;</span> */}\r\n        <div className={styles.input}>{participant.name}</div>\r\n        <span\r\n          className={styles.delete}\r\n          onClick={() => deleteParticipant(participant, index)}\r\n        >\r\n          &#10006;\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <TimerInput/>\r\n      <ParticipantForm/>\r\n\r\n      <div className={styles.inputContainer}>\r\n        {renderParticipants}\r\n        {participants.length > 1 && (\r\n          <button\r\n            className={styles.shuffleButton}\r\n            onClick={shuffleParticipants}\r\n          >\r\n            SHUFFLE\r\n          </button>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ParticipantContainer;\r\n","import { AnyAction, Reducer } from \"redux\";\r\nimport { produce, Draft } from \"immer\";\r\n\r\ntype ImmerReducer<S> = (state: Draft<S>, action: AnyAction) => void;\r\n\r\ninterface ImmerHandlers<S> {\r\n    [actionType: string] : ImmerReducer<S>;\r\n}\r\n\r\nfunction createReducer<S>(\r\n    initialState: S, \r\n    handlers: ImmerHandlers<S>\r\n    ) : Reducer {\r\n    return (state: S = initialState, action: AnyAction) : S => {\r\n        return produce<S>(state, draft => {\r\n            if (handlers[action.type]) {\r\n                handlers[action.type](draft, action);\r\n            }\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport default createReducer;","import { IParticipant } from \"../../models/models\";\r\nimport createReducer from \"../createReducer\";\r\nimport ParticipantsActionTypes from \"./participantsActions\";\r\n\r\n\r\nexport interface ParticipantState {\r\n    participants: IParticipant[],\r\n}\r\n\r\nconst initialState: ParticipantState = {\r\n    participants: [],\r\n}\r\n\r\nconst participantReducer = createReducer(initialState, {\r\n    [ParticipantsActionTypes.ADD] : (draft, action) => {\r\n        draft.participants.push(action.payload);\r\n    },\r\n    [ParticipantsActionTypes.REMOVE] : (draft, action) => {\r\n        const newParticipants = draft.participants.filter(p => p.uuid !== action.payload);\r\n        draft.participants = newParticipants;\r\n    },\r\n    [ParticipantsActionTypes.UPDATE] : (draft, action) => {\r\n        const index = draft.participants.findIndex(p => p.uuid === action.payload.uuid);\r\n        draft.participants[index] = {...action.payload}\r\n    },\r\n    [ParticipantsActionTypes.RESET] : (draft, action) => {\r\n        draft.participants =  [...action.payload];\r\n    }\r\n})\r\n\r\nexport default participantReducer;\r\n","import createReducer from \"../createReducer\";\r\nimport TimeActionTypes from \"./timeActions\";\r\n\r\n\r\nexport interface TimeState {\r\n    startTime: number,\r\n    currentTime: number,\r\n    isActive: boolean,\r\n}\r\n\r\nconst initialState: TimeState = {\r\n    startTime: 3,\r\n    currentTime: 3,\r\n    isActive: false,\r\n}\r\n\r\nconst timeReducer = createReducer(initialState, {\r\n    [TimeActionTypes.DECREMENT] : (draft) => {\r\n        draft.currentTime = draft.currentTime - 1;\r\n    },\r\n    [TimeActionTypes.RESET] : (draft) => {\r\n        draft.currentTime = draft.startTime;\r\n        draft.isActive = false;\r\n    },\r\n    [TimeActionTypes.SET_START] : (draft, action) => {\r\n        draft.startTime = action.payload;\r\n        draft.currentTime = action.payload;\r\n    },\r\n    [TimeActionTypes.SET_ACTIVE] : (draft, action) => {\r\n        draft.isActive = action.payload;\r\n    },\r\n})\r\n\r\nexport default timeReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport participantReducer, { ParticipantState } from \"./participants/participantsReducer\";\r\nimport timeReducer, { TimeState } from \"./time/timeReducer\";\r\n\r\nexport interface AppState {\r\n    participants: ParticipantState;\r\n    time: TimeState;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    participants: participantReducer,\r\n    time: timeReducer\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport \"../../scss/global.scss\";\r\nimport TimerContainer from \"../TimerContainer/TimerContainer\";\r\nimport ParticipantContainer from \"../ParticipantContainer/ParticipantContainer\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"../../store/configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <>\r\n      <section style={{ display: \"flex\", height: \"100%\" }}>\r\n        <TimerContainer/>\r\n        <ParticipantContainer/>\r\n      </section>\r\n      </>\r\n    </Provider>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import { Middleware, createStore, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n\r\nconst configureStore = () => {\r\n    const middleWare: Middleware[] = [];\r\n    return createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleWare)));\r\n\r\n}\r\n\r\nexport default configureStore;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}