{"version":3,"sources":["components/ParticipantContainer/ParticipantContainer.module.scss","components/TimerContainer/TimerContainer.module.scss","components/Timer/Timer.module.scss","components/PlayButton/PlayButton.module.scss","components/ParticipantForm/ParticipantForm.module.scss","components/TimerInput/TimerInput.module.scss","assets/audio/timeover.mp3","assets/audio/fight.mp3","components/Timer/Timer.tsx","components/PlayButton/PlayButton.tsx","components/TimerContainer/TimerContainer.tsx","components/TimerInput/TimerInput.tsx","components/ParticipantForm/ParticipantForm.tsx","components/ParticipantContainer/ParticipantContainer.tsx","components/App/App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Timer","time","label","className","styles","container","timer","top","content","timeText","minutes","Math","floor","renderMinutes","seconds","renderSeconds","renderTime","bottom","PlayButton","activeParticipant","onClick","isActive","buttonClasses","playPauseButton","join","Fragment","timeoverSound","require","fightSound","TimerContainer","startTime","currentTime","handleNextActiveParticipant","handleSetCurrentTime","TIME_UNITS","useState","setIsActive","resetTimer","useEffect","interval","timeInSeconds","totalMinutes","leftOverSeconds","document","title","writeToTitle","window","setInterval","Audio","play","clearInterval","name","buttonContainer","stop","TimerInput","handleSetStartTime","input","type","placeholder","step","min","max","autoFocus","onChange","event","inputTime","parseInt","target","value","toString","defaultValue","ParticipantForm","addInputValue","handleAddParticipant","handleSetaddInputValue","addInputContainer","onSubmit","e","addInput","ParticipantContainer","participants","handleUpdateParticipants","handleSpecificActiveParticipant","draggedParticipant","setDraggedParticipant","setaddInputValue","handleDragEnd","isDragging","undefined","renderParticipants","map","participant","index","classes","inputHolder","draggable","onDragStart","draggedItem","handleDragStart","onDragEnd","onDragOver","other","filter","p","splice","handleDragOver","key","uuid","delete","length","newParticipants","deleteParticipant","preventDefault","newParticipant","Date","now","push","inputContainer","shuffleButton","i","j","random","App","setParticipants","setActiveParticipant","setStarTime","setCurrentTime","updateNextActiveParticipant","newActiveParticipant","currentActiveIndex","findIndex","style","display","height","newActive","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9446e098.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ParticipantContainer_container__2L0l9\",\"inputContainer\":\"ParticipantContainer_inputContainer__35k3Y\",\"input\":\"ParticipantContainer_input__2nxjj\",\"inputHolder\":\"ParticipantContainer_inputHolder__A2fP_\",\"inputHolder--dragging\":\"ParticipantContainer_inputHolder--dragging__ApaXe\",\"inputHolder--active\":\"ParticipantContainer_inputHolder--active__pGr0D\",\"shuffleButton\":\"ParticipantContainer_shuffleButton__2FifX\",\"delete\":\"ParticipantContainer_delete__3Q-ir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TimerContainer_container__1SuAO\",\"title\":\"TimerContainer_title__tt8x-\",\"timer\":\"TimerContainer_timer__1O_lA\",\"timerDivider\":\"TimerContainer_timerDivider__1uqI_\",\"buttonContainer\":\"TimerContainer_buttonContainer__dxCq6\",\"stop\":\"TimerContainer_stop__UtwD4\",\"stop--active\":\"TimerContainer_stop--active__1q3Ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timer_container__1lHjA\",\"timer\":\"Timer_timer__7fVPQ\",\"top\":\"Timer_top__2P4OL\",\"bottom\":\"Timer_bottom__Q1X4X\",\"content\":\"Timer_content__2ZwwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playPauseButton\":\"PlayButton_playPauseButton__31J6X\",\"playPauseButton--active\":\"PlayButton_playPauseButton--active__1_LeN\",\"playPauseButton--enabled\":\"PlayButton_playPauseButton--enabled__1S9Ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addInputContainer\":\"ParticipantForm_addInputContainer__M5_1Z\",\"addInput\":\"ParticipantForm_addInput__3STb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TimerInput_input__20f4b\"};","module.exports = __webpack_public_path__ + \"static/media/timeover.c39f339c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fight.4e9f7ab1.mp3\";","import React from \"react\";\r\nimport styles from \"./Timer.module.scss\";\r\n\r\ninterface ITimerProps {\r\n  time: number,\r\n  label: string\r\n}\r\n\r\nconst Timer: React.FC<ITimerProps> = ({time, label}) => {\r\n  \r\n  function renderMinutes(): string {\r\n    let minutes = Math.floor(time / 60);\r\n    return minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n  }\r\n\r\n  function renderSeconds(): string {\r\n    let seconds = time % 60;\r\n    return seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n  }\r\n\r\n  const renderTime = (): string => {\r\n    let timeText;\r\n    switch (label) {\r\n      case 'MINUTES':\r\n        timeText = renderMinutes();\r\n        break;\r\n      \r\n      case 'SECONDS':\r\n        timeText = renderSeconds();\r\n        break;\r\n      default:\r\n        timeText = '';\r\n        break;\r\n    }\r\n\r\n    return timeText;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.timer}>\r\n        <div className={styles.top}></div>\r\n        <span className={styles.content}>{renderTime()}</span>\r\n        <div className={styles.bottom}></div>\r\n      </div>\r\n      <span className={styles.label}>{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport styles from \"./PlayButton.module.scss\";\r\nimport { IParticipant } from \"../../models/models\";\r\n\r\ninterface IPlayButtonProps {\r\n  activeParticipant?: IParticipant,\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>,\r\n  isActive: boolean\r\n}\r\n\r\nconst PlayButton: React.FC<IPlayButtonProps> = ({activeParticipant, onClick, isActive}) => {\r\n\r\n  const buttonClasses = [\r\n    styles.playPauseButton,\r\n    isActive ? styles[\"playPauseButton--active\"] : \"\",\r\n    activeParticipant ? styles[\"playPauseButton--enabled\"] : \"\"\r\n  ].join(\" \");\r\n  return (\r\n    <React.Fragment>\r\n       <button onClick={onClick} className={buttonClasses}></button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TimerContainer.module.scss\";\r\n\r\nimport Timer from \"../Timer/Timer\";\r\nimport PlayButton from \"../PlayButton/PlayButton\";\r\n// import timeoverSound from \"../../assets/audio/timeover.mp3\";\r\n// import fightSound from \"../../assets/audio/fight.mp3\";\r\n\r\nconst timeoverSound = require(\"../../assets/audio/timeover.mp3\");\r\nconst fightSound = require( \"../../assets/audio/fight.mp3\");\r\n\r\n\r\n\r\ninterface ITimerContainer{\r\n  activeParticipant: any,\r\n  startTime: number,\r\n  currentTime: number,\r\n  handleNextActiveParticipant: () => void,\r\n  handleSetCurrentTime: (time: number) => void\r\n}\r\n\r\nconst TimerContainer: React.FC<ITimerContainer> = ({\r\n  activeParticipant,\r\n  startTime,\r\n  currentTime,\r\n  handleNextActiveParticipant,\r\n  handleSetCurrentTime\r\n}) => {\r\n  const TIME_UNITS = {\r\n    MINUTES: \"MINUTES\",\r\n    SECONDS: \"SECONDS\"\r\n  };\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval: any;\r\n\r\n    if (isActive && currentTime >= 0) {\r\n      writeToTitle(currentTime);\r\n\r\n      interval = window.setInterval(() => {\r\n        handleSetCurrentTime(currentTime - 1);\r\n      }, 1000);\r\n    } else if (isActive && currentTime < 0) {\r\n      playStopSound();\r\n      window.clearInterval(interval);\r\n      resetTimer();\r\n      handleNextActiveParticipant();\r\n    }\r\n\r\n    return () => window.clearInterval(interval);\r\n  }, [\r\n    isActive,\r\n    currentTime,\r\n    handleSetCurrentTime,\r\n    handleNextActiveParticipant\r\n  ]);\r\n\r\n  function toggleTimer(): void {\r\n    if (!isActive && currentTime === startTime) {\r\n      var audio = new Audio(fightSound);\r\n      audio.play();\r\n    }\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n  function resetTimer(): void {\r\n    handleSetCurrentTime(startTime);\r\n    setIsActive(false);\r\n  }\r\n\r\n  function writeToTitle(timeInSeconds: number): void {\r\n    const totalMinutes = Math.floor(timeInSeconds / 60);\r\n    const leftOverSeconds = timeInSeconds % 60;\r\n    document.title = `${totalMinutes}min ${leftOverSeconds}s`;\r\n  }\r\n\r\n  function playStopSound() {\r\n    var audio = new Audio(timeoverSound);\r\n    audio.play();\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h3 className={styles.title}>\r\n        {!activeParticipant\r\n          ? \"Add a participant!\"\r\n          : `${activeParticipant.name}s turn`}\r\n      </h3>\r\n\r\n      <div className={styles.timer}>\r\n        <Timer time={currentTime} label={TIME_UNITS.MINUTES} />\r\n        <Timer time={currentTime} label={TIME_UNITS.SECONDS} />\r\n      </div>\r\n\r\n      <div className={styles.buttonContainer}>\r\n        <PlayButton\r\n          activeParticipant={activeParticipant}\r\n          isActive={isActive}\r\n          onClick={toggleTimer}\r\n        ></PlayButton>\r\n        {\r\n          <p\r\n            onClick={resetTimer}\r\n            className={[\r\n              styles.stop,\r\n              isActive || currentTime < startTime ? styles[\"stop--active\"] : \"\"\r\n            ].join(\" \")}\r\n          >\r\n            Reset\r\n          </p>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TimerContainer;\r\n","import React from \"react\";\r\nimport styles from \"./TimerInput.module.scss\";\r\n\r\ninterface ITimerInput{\r\n  startTime: number,\r\n  handleSetStartTime: (time: number) => void,\r\n  handleSetCurrentTime: (time: number) => void;\r\n}\r\n\r\nconst TimerInput: React.FC<ITimerInput> = ({ startTime, handleSetStartTime, handleSetCurrentTime }) => {\r\n  function updateTimer(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    let inputTime = parseInt(event.target.value);\r\n    if (inputTime > 99){\r\n      inputTime = 99;\r\n      event.target.value = inputTime.toString(); \r\n    } \r\n    else if (inputTime < 0){\r\n      inputTime = 0;\r\n      event.target.value = inputTime.toString();\r\n    } \r\n\r\n    handleSetStartTime(inputTime * 60);\r\n    handleSetCurrentTime(inputTime * 60);\r\n  }\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type=\"number\"\r\n      placeholder=\"\"\r\n      step=\"1\"\r\n      min=\"0\"\r\n      max=\"99\"\r\n      autoFocus={true}\r\n      onChange={updateTimer}\r\n      defaultValue={startTime / 60}\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default TimerInput;\r\n","import React from \"react\";\r\nimport styles from \"./ParticipantForm.module.scss\";\r\n\r\ninterface IParticipantForm{\r\n  addInputValue: string,\r\n  handleAddParticipant: (event: React.FormEvent<HTMLFormElement>) => void,\r\n  handleSetaddInputValue: (inputValue: string) => void,\r\n}\r\n\r\nconst ParticipantForm: React.FC<IParticipantForm> = ({ addInputValue, handleAddParticipant, handleSetaddInputValue }) => {\r\n  return (\r\n    <form\r\n      className={styles.addInputContainer}\r\n      onSubmit={e => handleAddParticipant(e)}\r\n    >\r\n      <input\r\n        className={styles.addInput}\r\n        type=\"text\"\r\n        placeholder={\"Add a friend\"}\r\n        value={addInputValue}\r\n        onChange={e => handleSetaddInputValue(e.target.value)}\r\n      ></input>\r\n      <button type=\"submit\" value=\"Submit\">\r\n        ADD\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ParticipantForm;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ParticipantContainer.module.scss\";\r\nimport TimerInput from \"../TimerInput/TimerInput\";\r\nimport ParticipantForm from \"../ParticipantForm/ParticipantForm\";\r\nimport { IParticipant } from \"../../models/models\";\r\n\r\ninterface IParticipantContainer{\r\n  activeParticipant: IParticipant,\r\n  participants: IParticipant[],\r\n  startTime: number,\r\n  handleUpdateParticipants: (participants: IParticipant[]) => void,\r\n  handleNextActiveParticipant: () => void,\r\n  handleSpecificActiveParticipant: (participant?: IParticipant) => void,\r\n  handleSetStartTime: (time: number) => void,\r\n  handleSetCurrentTime: (time: number) => void\r\n}\r\n\r\nconst ParticipantContainer: React.FC<IParticipantContainer> = ({\r\n  activeParticipant,\r\n  participants,\r\n  startTime,\r\n  handleUpdateParticipants,\r\n  handleNextActiveParticipant,\r\n  handleSpecificActiveParticipant,\r\n  handleSetStartTime,\r\n  handleSetCurrentTime\r\n}) => {\r\n  const [draggedParticipant, setDraggedParticipant] = useState<IParticipant>();\r\n  const [addInputValue, setaddInputValue] = useState(\"\");\r\n\r\n  const handleDragStart = (event: React.DragEvent<HTMLDivElement>, index: number) => {\r\n    const draggedItem = participants[index];\r\n    draggedItem.isDragging = true;\r\n    setDraggedParticipant(draggedItem);\r\n  };\r\n\r\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>, index: number) => {\r\n    if (!draggedParticipant) return;\r\n    \r\n    const draggedItem = participants[index];\r\n    if (draggedItem === draggedParticipant) return;\r\n\r\n    let other: IParticipant[] = participants.filter(p => p !== draggedParticipant);\r\n    other.splice(index, 0, draggedParticipant);\r\n    handleUpdateParticipants(other);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    if (!draggedParticipant) return;    \r\n    draggedParticipant.isDragging = false;\r\n    setDraggedParticipant(undefined);\r\n  };\r\n\r\n  const addParticipant = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (!addInputValue) return;\r\n\r\n    const newParticipant: IParticipant = {\r\n      name: addInputValue,\r\n      isDragging: false,\r\n      uuid: Date.now()\r\n    };\r\n\r\n    participants.push(newParticipant);\r\n    setaddInputValue(\"\");\r\n    handleUpdateParticipants(participants);\r\n\r\n    if (!activeParticipant) {\r\n      handleSpecificActiveParticipant(newParticipant);\r\n    }\r\n  };\r\n\r\n  const shuffleParticipants = () => {\r\n    for (let i = participants.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [participants[i], participants[j]] = [participants[j], participants[i]];\r\n    }\r\n    handleUpdateParticipants(participants);\r\n    handleSpecificActiveParticipant(participants[0]);\r\n  };\r\n\r\n  const deleteParticipant = (uuid: number) => {\r\n    if (participants.length === 1) handleSpecificActiveParticipant();\r\n    else if (activeParticipant.uuid === uuid) handleNextActiveParticipant();\r\n\r\n    const newParticipants = participants.filter(p => p.uuid !== uuid);\r\n    handleUpdateParticipants(newParticipants);\r\n  };\r\n\r\n  const renderParticipants = participants.map((participant: any, index: number) => {\r\n    const classes = [\r\n      styles.inputHolder,\r\n      participant.isDragging ? styles[\"inputHolder--dragging\"] : \"\",\r\n      participant === activeParticipant ? styles[\"inputHolder--active\"] : \"\"\r\n    ].join(\" \");\r\n\r\n    return (\r\n      <div\r\n        draggable\r\n        onDragStart={e => handleDragStart(e, index)}\r\n        onDragEnd={handleDragEnd}\r\n        onDragOver={e => handleDragOver(e, index)}\r\n        key={participant.uuid}\r\n        className={classes}\r\n      >\r\n        {/* <span className={styles.green}>&#10004;</span> */}\r\n        <div className={styles.input}>{participant.name}</div>\r\n        <span\r\n          className={styles.delete}\r\n          onClick={() => deleteParticipant(participant.uuid)}\r\n        >\r\n          &#10006;\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <TimerInput\r\n        startTime={startTime}\r\n        handleSetStartTime={handleSetStartTime}\r\n        handleSetCurrentTime={handleSetCurrentTime}\r\n      ></TimerInput>\r\n\r\n      <ParticipantForm\r\n        addInputValue={addInputValue}\r\n        handleSetaddInputValue={setaddInputValue}\r\n        handleAddParticipant={addParticipant}\r\n      ></ParticipantForm>\r\n\r\n      <div className={styles.inputContainer}>\r\n        {renderParticipants}\r\n        {participants.length > 1 && (\r\n          <button\r\n            className={styles.shuffleButton}\r\n            onClick={shuffleParticipants}\r\n          >\r\n            SHUFFLE\r\n          </button>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ParticipantContainer;\r\n","import React, { useState } from \"react\";\r\nimport \"../../scss/global.scss\";\r\nimport TimerContainer from \"../TimerContainer/TimerContainer\";\r\nimport ParticipantContainer from \"../ParticipantContainer/ParticipantContainer\";\r\nimport { IParticipant } from \"../../models/models\";\r\n\r\nconst App = () => {\r\n  const initialTime: number = 3; // 15 minutes\r\n\r\n  const [participants, setParticipants] = useState<IParticipant[]>([]);\r\n  const [activeParticipant, setActiveParticipant] = useState();\r\n  const [startTime, setStarTime] = useState<number>(initialTime);\r\n  const [currentTime, setCurrentTime] = useState<number>(initialTime);\r\n\r\n  const updateNextActiveParticipant = () => {\r\n    const currentActiveIndex = participants.findIndex(\r\n      p => p.uuid === activeParticipant.uuid\r\n    );\r\n    let newActiveParticipant;\r\n    if (currentActiveIndex === participants.length - 1) {\r\n      newActiveParticipant = participants[0];\r\n    } else {\r\n      newActiveParticipant = participants[currentActiveIndex + 1];\r\n    }\r\n    setActiveParticipant(newActiveParticipant);\r\n  };\r\n\r\n  const updateParticipants = (newParticipants: IParticipant[]) => {\r\n    setParticipants([...newParticipants]);\r\n  };\r\n\r\n  const updateSpecificActiveParticipant = (newActive?: IParticipant) => {\r\n    setActiveParticipant(newActive);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section style={{ display: \"flex\", height: \"100%\" }}>\r\n        <TimerContainer\r\n          activeParticipant={activeParticipant}\r\n          startTime={startTime}\r\n          currentTime={currentTime}\r\n          handleNextActiveParticipant={updateNextActiveParticipant}\r\n          handleSetCurrentTime={setCurrentTime}\r\n        />\r\n        <ParticipantContainer\r\n          activeParticipant={activeParticipant}\r\n          participants={participants}\r\n          startTime={startTime}\r\n          handleUpdateParticipants={updateParticipants}\r\n          handleNextActiveParticipant={updateNextActiveParticipant}\r\n          handleSpecificActiveParticipant={updateSpecificActiveParticipant}\r\n          handleSetStartTime={setStarTime}\r\n          handleSetCurrentTime={setCurrentTime}\r\n        />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}